program moduleDeclarations otherModules driverModule otherModules
moduleDeclarations moduleDeclaration moduleDeclarations
moduleDeclarations EPSILON 
moduleDeclaration DECLARE MODULE ID SEMICOL
otherModules module otherModules
otherModules EPSILON 
module DEF MODULE ID ENDDEF TAKES INPUT SQBO input_plist1 SQBC SEMICOL ret moduleDef
ret RETURNS SQBO output_plist1 SQBC SEMICOL 
ret EPSILON
driverModule DRIVERDEF DRIVER PROGRAM DRIVERENDDEF moduleDef
moduleDef START statements END
input_plist1 ID COLON dataType input_plist2
input_plist2 COMMA ID COLON dataType input_plist2
input_plist2 EPSILON
output_plist1 ID COLON type output_plist2
output_plist2 COMMA ID COLON type output_plist2
output_plist2 EPSILON
dataType ARRAY SQBO range_arrays SQBC OF type
range_arrays index_arr RANGEOP index_arr
type INTEGER 
type REAL 
type BOOLEAN
statements statement statements
statements EPSILON
statement ioStmt
statement simpleStmt
statement declareStmt
statement conditionalStmt
statement iterativeStmt
ioStmt GET_VALUE BO ID BC SEMICOL 
ioStmt PRINT BO var_print BC SEMICOL
boolConstt TRUE
boolConstt FALSE 
id_num_rnum ID
id_num_rnum NUM 
id_num_rnum RNUM
array_element_for_print ID SQBO index_arr SQBC
var_print id_num_rnum
var_print boolConstt
var_print array_element_for_print
var_print ID p1
var_print NUM
var_print RNUM
p1 SQBO new_index SQBC
p1 EPSILON 
simpleStmt assignmentStmt moduleReuseStmt
assignmentStmt ID whichStmt
whichStmt valueIDStmt
whichStmt valueARRStmt
valueIDStmt ASSIGNOP expression SEMICOL
valueARRStmt SQBO element_index_with_expressions SQBC ASSIGNOP expression SEMICOL 
index_arr sign new_index
new_index NUM
new_index ID 
sign PLUS
sign MINUS
sign EPSILON
moduleReuseStmt optional USE MODULE ID WITH PARAMETERS actualParaList SEMICOL
actualParaList NUM
actualParaList RNUM
actualParaList boolConstt
actualParaList ID n7
n7 SQBO element_index_with_expressions SQBC
n7 EPSILON
optional SQBO idList1 SQBC ASSIGNOP
optional EPSILON
idList1 ID idList2
idList2 COMMA ID idList2
idList2 EPSILON
expression arithmeticOrBooleanExpr u
u unary_op new_NT
new_NT BO arithmeticExpr BC 
new_NT var_id_num
var_id_num ID
var_id_num NUM
var_id_num RNUM
unary_op PLUS
unary_op MINUS
arithmeticOrBooleanExpr anyTerm n1
n1 logicalOp anyTerm n1
n1 EPSILON 
anyTerm arithmeticExpr n2
anyTerm boolConstt 
n2 relationalOp arithmeticExpr 
n2 EPSILON
arithmeticExpr arithmeticExpr op1 term
arithmeticExpr term n3
n3 op1 term n3
n3 EPSILON
term factor n4
n4 op2 factor n4 
n4 EPSILON
factor BO arithmeticOrBooleanExpr BC 
factor NUM
factor RNUM
factor boolConstt
factor ID n5
n5 SQBO element_index_with_expressions SQBC 
n5 EPSILON
arrExpr arrTerm arr_N4
arr_N4 op1 arrTerm arr_N4
arr_N4 EPSILON
arrTerm arrFactor arr_N5
arr_N5 op2 arrFactor arr_N5
arr_N5 EPSILON
arrFactor ID
arrFactor NUM
arrFactor boolConstt
arrFactor BO arrExpr BC
element_index_with_expressions sign n6
element_index_with_expressions arrExpr
n6 new_index
n6 BO arrExpr BC
op1 PLUS
op1 MINUS
op2 MUL
op2 DIV 
logicalOp AND
logicalOp OR
relationalOp LT
relationalOp LE
relationalOp GT
relationalOp GE
relationalOp EQ
relationalOp NE
declareStmt DECLARE idList1 COLON dataType SEMICOL
conditionalStmt SWITCH BO ID BC START caseStmt1 default1 END
caseStmt1 CASE value COLON statements BREAK SEMICOL caseStmt2
caseStmt2 CASE value COLON statements BREAK SEMICOL caseStmt2
caseStmt2 EPSILON
value NUM
value TRUE
value FALSE
default1 DEFAULT COLON statements BREAK SEMICOL 
default1 EPSILON
iterativeStmt FOR BO ID IN range_for_loop BC START statements END
iterativeStmt WHILE BO arithmeticOrBooleanExpr BC START statements END
range_for_loop index_for_loop RANGEOP index_for_loop
index_for_loop sign_for_loop new_index_for_loop
new_index_for_loop NUM
sign_for_loop PLUS 
sign_for_loop MINUS 
sign_for_loop EPSILON